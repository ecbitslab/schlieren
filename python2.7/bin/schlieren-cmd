#! /usr/bin/env python

import logging
LOG = logging.getLogger(__name__)

import argparse
import schlieren.serial as ss
import schlieren.parallel as sp
import schlieren.utils
import profilehooks

import matplotlib.pyplot as plt
import matplotlib.cm as cm
import matplotlib.colors as colors

MAPS = [m for m in cm.datad if not m.endswith('_r')]

def add_viewer(fn):
    plt.ion()
    plt.figure()
    plt.show()
    def _write(image):
        plt.clf()
        plt.imshow(image)
        plt.draw()
        return fn(image)
    return _write

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('frame_src', type=schlieren.utils.src_from_path)
    parser.add_argument('-p', '--profile', default='')
    parser.add_argument('-v', '--view', default=False, action='store_true')
    parser.add_argument('-m', '--mproc', default=False, action='store_true')
    parser.add_argument('-s', '--frame-snk', default=schlieren.utils.CounterSnk(), type=schlieren.utils.snk_from_path)
    parser.add_argument('-c', '--cmap', default='jet', type=cm.get_cmap,
                        help='AVAILABLE MAPS: ' + ' '.join(sorted(MAPS)))
    parser.add_argument('--vmin', default=-0.3, type=float)
    parser.add_argument('--vmax', default=0.3, type=float)
    ns = parser.parse_args()

    if ns.view:
        ns.frame_snk.write = add_viewer(ns.frame_snk.write)

    PipelineCls = ss.DefaultPipeline
    if ns.mproc:
        PipelineCls = sp.DefaultPipeline
    
    if ns.vmin >= ns.vmax:
        _error_msg = "--vmin ({}) must be strictly less than --vmax ({})!".format(ns.vmin, ns.vmax)
        parser.error(_error_msg)

    ns.cmap = cm.ScalarMappable(norm=colors.Normalize(ns.vmin, ns.vmax), cmap=ns.cmap).to_rgba

    pl = PipelineCls(ns.frame_src, ns.frame_snk, ns.cmap)

    if len(ns.profile) > 0:
        pl.run = profilehooks.profile(pl.run, filename=ns.profile)
    
    pl.run()

if __name__ == '__main__':
    main()
